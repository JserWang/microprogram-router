import{o as t,c as a,a as e}from"./app.9a765ee9.js";const o='{"title":"带参数的动态路由匹配","description":"","frontmatter":{},"relativePath":"guide/basics/dynamic-matching.md","lastUpdated":1620044045987}',s={},d=e('<h1 id="带参数的动态路由匹配"><a class="header-anchor" href="#带参数的动态路由匹配" aria-hidden="true">#</a> 带参数的动态路由匹配</h1><p>很多时候，我们需要将给定匹配模式的路由映射到同一个页面。例如，我们可能有一个 <code>ProductDetail</code> 页面，它应该对所有商品详情进行渲染，但商品 ID 不同。在 Microprogram Router 中，我们可以在路径中使用一个动态段来实现，我们称之为 <em>路径参数</em> ：</p><div class="language-ts"><pre><code><span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token comment">// 动态段以冒号开始</span>\n  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;/product/detail/:id&#39;</span><span class="token punctuation">,</span> page<span class="token operator">:</span> <span class="token string">&#39;pages/product/detail/index&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span>\n</code></pre></div><p>现在像 <code>/product/detail/123</code> 和 <code>/product/detail/456</code> 这样的 URL 都会映射到同一个路由。</p><p><em>路径参数</em> 用冒号 <code>:</code> 表示。当一个路由被匹配时，它的 <em>params</em> 的值将在每个页面中以 <code>useRoute().params</code> 的形式暴露出来。</p><p>你可以在同一个路由中设置有多个 <em>路径参数</em>。例如：</p><table><thead><tr><th>匹配模式</th><th>匹配路径</th><th>useRoute().params</th></tr></thead><tbody><tr><td>/product/:productId</td><td>/product/1</td><td><code>{ productId: &#39;1&#39; }</code></td></tr><tr><td>/product/:categoryId/:productId</td><td>/product/c1/2</td><td><code>{ categoryId: &#39;c1&#39;, productId: &#39;2&#39; }</code></td></tr></tbody></table>',7);s.render=function(e,o,s,n,p,c){return t(),a("div",null,[d])};export default s;export{o as __pageData};
