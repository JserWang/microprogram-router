import{o as e,c as o,a as r}from"./app.9a765ee9.js";const c='{"title":"介绍","description":"","frontmatter":{},"headers":[{"level":2,"title":"microprogram 的来由","slug":"microprogram-的来由"},{"level":2,"title":"为什么封装router","slug":"为什么封装router"},{"level":2,"title":"能带来什么","slug":"能带来什么"},{"level":2,"title":"鸣谢","slug":"鸣谢"}],"relativePath":"index.md","lastUpdated":1620053778863}',d={},a=r('<h1 id="介绍"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h1><h2 id="microprogram-的来由"><a class="header-anchor" href="#microprogram-的来由" aria-hidden="true">#</a> microprogram 的来由</h2><p>由于接触小程序已经相对较晚了，所以好听、好记的 scope 基本都已经被占用了，外加原本不想局限在某一种小程序之上，所以取了抖音小程序 <code>micro-app</code> 中的 <code>micro</code>，又取了微信小程序 <code>miniprogram</code> 中的 <code>program</code>，组成了现在的 <code>microprogram</code> 。</p><h2 id="为什么封装router"><a class="header-anchor" href="#为什么封装router" aria-hidden="true">#</a> 为什么封装router</h2><ul><li><p>当页面之间想传大对象时，URL过长导致跳转失败。</p></li><li><p>在页面路由跳转时，在业务代码中我们通常需要一些标识来处理用户的下一步行为。比如，某些页面需要获得登录授权后才能访问，在访问这种类型的页面时，检测是否已登录授权，如没有则直接跳转至登录页</p></li><li><p>小程序的页面栈受限，无脑使用类似于 <code>router.push</code> 的方法会得到警告以至于页面跳转失败</p></li><li><p>当执行<code>back</code>、<code>switchTab</code>也需要传参。</p></li><li><p>完美路由栈的呈现，需要开发者时刻清楚什么时候用<code>replace</code>、<code>push</code>、<code>switchTab</code>。</p></li><li><p>本人所学皆来自于社区，遂将本人所学与所需整理，回报于社区</p></li></ul><h2 id="能带来什么"><a class="header-anchor" href="#能带来什么" aria-hidden="true">#</a> 能带来什么</h2><ul><li><p>提供 <code>beforeEach</code> 与 <code>afterEach</code> 两个全局路由守卫，可在路由跳转前后进行一系列操作，如路由跳转前进行鉴权。</p></li><li><p>一个聪明的 <code>push</code> 策略，让开发者无需考虑什么时候需要 back，什么时候需要 replace。</p></li><li><p>页面之间传参时，<code>router</code> 内部通过 storage 进行存储，解决因传输大对象导致的 URL 过长问题、调用非官方支持的传参跳转方法（如：<code>switchTab</code>、<code>back</code>）的传参问题。</p></li><li><p>结合 <code>@microprogram/plugin-router</code> 的使用，告别每次修改 <code>routes</code> 时，还需要配置一次 <code>app.json</code> 中 <code>pages</code> 与 <code>subPackages</code> 的烦恼，它会为你自动填充 <code>app.json</code>，你只需要关心 <code>router</code> 中的 <code>routes</code> 即可。</p></li></ul><h2 id="鸣谢"><a class="header-anchor" href="#鸣谢" aria-hidden="true">#</a> 鸣谢</h2><p>microprogram-router 思想借鉴于 <code>vue-router 4.0</code> 以及解析 url 参数的源码也来自于 <code>vue-router 4.0</code>，感谢 <code>vuejs</code> 团队。</p>',9);d.render=function(r,c,d,i,l,p){return e(),o("div",null,[a])};export default d;export{c as __pageData};
