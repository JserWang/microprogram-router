import{o as n,c as s,a}from"./app.9a765ee9.js";const t='{"title":"入门","description":"","frontmatter":{},"headers":[{"level":2,"title":"初始化","slug":"初始化"},{"level":2,"title":"挂载","slug":"挂载"},{"level":2,"title":"调用","slug":"调用"},{"level":2,"title":"Typescript","slug":"typescript"}],"relativePath":"guide/basics/index.md","lastUpdated":1620045907440}',p={},o=a('<h1 id="入门"><a class="header-anchor" href="#入门" aria-hidden="true">#</a> 入门</h1><div class="tip custom-block"><p class="custom-block-title">注意</p><p>教程中的所有例子都以微信小程序（JS版本）为例。多小程序之间唯一不同的仅是 history 的不同，具体的 history 创建方式可见： <a href="./history-mode.html">路由模式</a></p></div><h2 id="初始化"><a class="header-anchor" href="#初始化" aria-hidden="true">#</a> 初始化</h2><p>在工程中新建 <code>router</code> 目录，在 <code>router</code> 目录新建中 <code>index.js</code> 或 <code>index.ts</code> 文件</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> \n  createRouter<span class="token punctuation">,</span>\n  createWechatHistory\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@microprogram/router&#39;</span>\n\n<span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>\n    page<span class="token operator">:</span> <span class="token string">&#39;pages/index/index&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&#39;/log&#39;</span><span class="token punctuation">,</span>\n    page<span class="token operator">:</span> <span class="token string">&#39;pages/log/index&#39;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n\n<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  history<span class="token operator">:</span> <span class="token function">createWechatHistory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  routes\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> router\n</code></pre></div><h2 id="挂载"><a class="header-anchor" href="#挂载" aria-hidden="true">#</a> 挂载</h2><p>在 <code>app.ts</code> 中引入</p><div class="language-js"><pre><code><span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">&#39;./router/index&#39;</span>\n\n<span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  router\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><h2 id="调用"><a class="header-anchor" href="#调用" aria-hidden="true">#</a> 调用</h2><p>在页面对应的 ts 文件中使用 router</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useRoute<span class="token punctuation">,</span> useRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@microprogram/router&#39;</span>\n\n<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">onShow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 获取当前页面中的参数</span>\n    <span class="token function">useRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>params\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">handleClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 跳转至 log 页</span>\n    <span class="token function">useRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;/log&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><h2 id="typescript"><a class="header-anchor" href="#typescript" aria-hidden="true">#</a> Typescript</h2><p>router 同时导出了 RouteRecord ，你可以通过设置 routes 类型来获得编辑器的自动提示功能。</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> RouteRecord <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@microprogram/router&#39;</span>\n\n<span class="token keyword">const</span> routes<span class="token operator">:</span> RouteRecord<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">]</span>\n\n</code></pre></div>',14);p.render=function(a,t,p,e,c,u){return n(),s("div",null,[o])};export default p;export{t as __pageData};
